[
  {
    "path": "posts/2022-05-09-network-status/",
    "title": "Network Status and Centrality",
    "description": "Who are the key actors in the football network? What makes them the key actors",
    "author": [
      {
        "name": "Isha Akshita Mahajan, Ankit Kumar",
        "url": {}
      }
    ],
    "date": "2022-05-09",
    "categories": [],
    "contents": "\nAssignment Description\nCalculate closeness, betweenness and eigenvector centrality measures for your network data, and bonachic-power if possible. Compare these measures to basic degree centrality measures. Try to interpret the results. Are there any interesting patterns in the distribution of measures or correlations between them that provide insight into the measures?\nYou may also want to identify whether the same node(s) are more/less central using the different measures, and see if you can find any patterns in the results based on which nodes are high/low on each measures. Discuss (with any related evidence) whether or not the node(s) behavior is in line with or violates expectations based on the degree centrality measure, comparing across those measures using a data frame similar to that constructed in the syntax. Be sure to share your assignment with group members for comments.\nEigenvector Centrality\nThe eigenvector centrality determines how important the neighborhood of the nodes is in the network. The higher the eigenvalue centrality, the more important the neighbors of that node are with respect to other nodes in the network. (Jackson 08) The eigenvalues also take into account the proximity of the node to many other important nodes in the network.\nAS Roma has the highest eigenvalue in the network. This can be an additional support to our previous speculation on how AS Roma might influential in the influx and outflow of football talent as they are well connected to the other influential nodes in our football transfer network.\n\n\ntemp <- igraph::centr_eigen(ig,directed=T)\ntransfer.nodes$eigen <- temp$vector\n#arrange descending and return top 5 nodes\narrange(transfer.nodes, desc(eigen)) %>%\n  slice(1:5)\n\n\n                         name degree indegree outdegree     eigen\nAS Roma               AS Roma     78       39        39 1.0000000\nGenoa CFC           Genoa CFC     73       46        27 0.9612356\nInter Milan       Inter Milan     68       32        36 0.8787351\nACF Fiorentina ACF Fiorentina     66       38        28 0.7988873\nUS Sassuolo       US Sassuolo     70       35        35 0.7789739\n\nDerived and Reflected Centrality\nWe compute the derived and reflected Eigenvector centrality to better understand whether the influence is more observed in the neighborhood of the nodes or is it more observed on the strength of the node itself.\n\n\nmatrix <- as.matrix(as_adjacency_matrix(ig, attr = \"weight\"))\n#square the adjacency matrix\nmatsq<-t(matrix) %*% matrix\n#Calculate the proportion of reflected centrality.\ntransfer.nodes$rc<-diag(matsq)/rowSums(matsq)\n#replace missing values with 0\ntransfer.nodes$rc<-ifelse(is.nan(transfer.nodes$rc),0,transfer.nodes$rc)\n#Calculate received eigenvalue centrality\ntransfer.nodes$eigen.rc<-transfer.nodes$eigen*transfer.nodes$rc\n#Calculate the proportion of derived centrality.\ntransfer.nodes$dc<-1-diag(matsq)/rowSums(matsq)\n#replace missing values with 0\ntransfer.nodes$dc<-ifelse(is.nan(transfer.nodes$dc),1,transfer.nodes$dc)\n#Calculate received eigenvalue centrality\ntransfer.nodes$eigen.dc<-transfer.nodes$eigen*transfer.nodes$dc\n\n\n\n\n\nfilter(transfer.nodes,name%in%c(\"Chelsea FC\",\"FC Barcelona\"))\n\n\n                     name degree indegree outdegree     eigen\nFC Barcelona FC Barcelona     59       21        38 0.2704215\nChelsea FC     Chelsea FC     48       12        36 0.2449357\n                    rc   eigen.rc        dc  eigen.dc\nFC Barcelona 0.2218696 0.05999830 0.7781304 0.2104232\nChelsea FC   0.2352494 0.05762098 0.7647506 0.1873148\n\n\n\n##cen <- eigen_centrality(ig, directed = TRUE)\n#cen$vector\n\n\n\n\n\ntransfer.nodes%>%\n  select(-name) %>% \n  gather() %>% \n  ggplot(aes(value)) +\n    geom_histogram() +\n    facet_wrap(~key, scales = \"free\")\n\n\n\n\n\n\n#build on the dataframe\ntemp<-transfer.nodes %>% \n  select(degree,indegree,outdegree,eigen,eigen.rc,eigen.dc)%>%\n  correlate() %>%\n  rearrange()\n\n\n\n\n\nfashion(temp)\n\n\n       term outdegree degree indegree eigen.rc eigen.dc eigen\n1 outdegree              .94      .79      .67      .67   .69\n2    degree       .94             .95      .73      .79   .80\n3  indegree       .79    .95               .70      .82   .82\n4  eigen.rc       .67    .73      .70               .82   .86\n5  eigen.dc       .67    .79      .82      .82           1.00\n6     eigen       .69    .80      .82      .86     1.00      \n\n\n\nrplot(temp)\n\n\n\n\nBetweeness Centrality\nBetweeness centrality quantifies the number of times a node acts as a bridge along the shortest path between two other nodes.\n\n\ntransfer.nodes$betweeness <- igraph::betweenness(ig, directed=TRUE)\ntransfer.nodes%>%\narrange(desc(betweeness))%>%\nslice(1:5)\n\n\n                                 name degree indegree outdegree\nUC Sampdoria             UC Sampdoria     57       32        25\nOlympiacos Piraeus Olympiacos Piraeus     41       19        22\nGenoa CFC                   Genoa CFC     73       46        27\nACF Fiorentina         ACF Fiorentina     66       38        28\nHellas Verona           Hellas Verona     39       27        12\n                       eigen         rc   eigen.rc        dc\nUC Sampdoria       0.6156139 0.06250452 0.03847865 0.9374955\nOlympiacos Piraeus 0.1548258 0.02184055 0.00338148 0.9781595\nGenoa CFC          0.9612356 0.08798435 0.08457368 0.9120157\nACF Fiorentina     0.7988873 0.11743415 0.09381665 0.8825658\nHellas Verona      0.6603528 0.02847622 0.01880435 0.9715238\n                    eigen.dc betweeness\nUC Sampdoria       0.5771352   45262.42\nOlympiacos Piraeus 0.1514443   43409.28\nGenoa CFC          0.8766619   34603.48\nACF Fiorentina     0.7050706   31710.00\nHellas Verona      0.6415485   31489.50\n\nNetwork Constraint\n\n\ntransfer.nodes$constraint<-constraint(ig)\n\n\n\nAuthority\nAuthorities are those actors which get many incoming links from hubs, presumably because of their high quality relevant information. (Klien 16) In this case Juventus, Chelsea, Barcelona,PSG, Manchester United and Athleteco have the highest authority scores. This means that these clubs are attracting talent from the hubs like Real Madrid, which we will see includes Eden Hazard’s transfer in 2019\n\n\ntransfer.nodes$authority <- authority_score(ig)$vector\n\na <- transfer.nodes %>% \n  arrange(desc(authority))\nhead(a)\n\n\n                                   name degree indegree outdegree\nJuventus FC                 Juventus FC     68       27        41\nChelsea FC                   Chelsea FC     48       12        36\nFC Barcelona               FC Barcelona     59       21        38\nParis Saint-Germain Paris Saint-Germain     37       17        20\nManchester United     Manchester United     29       15        14\nAtlético de Madrid   Atlético de Madrid     48       26        22\n                        eigen        rc   eigen.rc        dc\nJuventus FC         0.6770212 0.2150981 0.14562594 0.7849019\nChelsea FC          0.2449357 0.2352494 0.05762098 0.7647506\nFC Barcelona        0.2704215 0.2218696 0.05999830 0.7781304\nParis Saint-Germain 0.3905048 0.2504831 0.09781486 0.7495169\nManchester United   0.1991738 0.2315679 0.04612226 0.7684321\nAtlético de Madrid  0.3488429 0.1835874 0.06404317 0.8164126\n                     eigen.dc betweeness constraint authority\nJuventus FC         0.5313953  20394.667 0.10137186 1.0000000\nChelsea FC          0.1873148    470.000 0.10431587 0.7752539\nFC Barcelona        0.2104232   4600.083 0.09625534 0.7566895\nParis Saint-Germain 0.2926900   1106.000 0.11810230 0.6491154\nManchester United   0.1530515   1222.500 0.09350633 0.5523492\nAtlético de Madrid  0.2847998   1422.662 0.09802569 0.5507481\n\nHubs\nMany Ties to Peripheral Actors\n\n\ntransfer.nodes$hub_score <- hub_score(ig)$vector\nhead(transfer.nodes)\n\n\n                               name degree indegree outdegree\nAston Villa             Aston Villa     35       27         8\nInter Milan             Inter Milan     68       32        36\nBorussia Dortmund Borussia Dortmund     45       18        27\nACF Fiorentina       ACF Fiorentina     66       38        28\nReal Madrid             Real Madrid     46       17        29\nRB Leipzig               RB Leipzig     44       26        18\n                      eigen        rc   eigen.rc        dc  eigen.dc\nAston Villa       0.2139009 0.1837553 0.03930541 0.8162447 0.1745954\nInter Milan       0.8787351 0.2193920 0.19278741 0.7806080 0.6859477\nBorussia Dortmund 0.2370659 0.1480322 0.03509339 0.8519678 0.2019725\nACF Fiorentina    0.7988873 0.1174342 0.09381665 0.8825658 0.7050706\nReal Madrid       0.2296944 0.2975292 0.06834078 0.7024708 0.1613536\nRB Leipzig        0.3082591 0.1717242 0.05293556 0.8282758 0.2553235\n                  betweeness constraint  authority hub_score\nAston Villa          788.000 0.11333984 0.11093521 0.2347654\nInter Milan         2799.590 0.09623411 0.26367856 0.7339420\nBorussia Dortmund   2073.000 0.06401961 0.14776045 0.5191494\nACF Fiorentina     31709.998 0.11085545 0.06147522 0.4296561\nReal Madrid         4185.762 0.10787227 0.39259852 1.0000000\nRB Leipzig          2936.417 0.09094430 0.10029228 0.3521672\n\nConsider Real Madrid a hub given that their hub_score is 1. We can confirm this by looking at higher eigenvector derived centrality and lower reflected centrality.\nBridges\nA few ties to central actors =\n\n\nbridges(ig)\n\n\n+ 238/4386 edges from 898a914 (vertex names):\n [1] Maccabi Haifa      ->Levski Sofia           \n [2] SC Farense         ->Vancouver Whitecaps FC \n [3] Moreirense FC      ->Al-Batin FC            \n [4] Grenoble Foot 38   ->FC Famalicão           \n [5] CA Fénix           ->FC Famalicão           \n [6] Maccabi Netanya    ->Hapoel Beer Sheva      \n [7] Ironi Kiryat Shmona->Hapoel Beer Sheva      \n [8] Hapoel Haifa       ->Hapoel Beer Sheva      \n [9] FC Basel 1893 U18  ->Juventus Primavera     \n[10] Amiens SC U19      ->Manchester United Youth\n+ ... omitted several edges\n\nbridges <- transfer.nodes %>% \n  filter(name == \"Maccabi Haifa\")\nhead(bridges)\n\n\n                       name degree indegree outdegree eigen rc\nMaccabi Haifa Maccabi Haifa      1        0         1     0  0\n              eigen.rc dc eigen.dc betweeness constraint authority\nMaccabi Haifa        0  1        0          0          1         0\n              hub_score\nMaccabi Haifa         0\n\nWe test the understanding whether these teams actually serve as bridges in the network. By looking at the derived and reflected centrality scores, we see that the the reflected centrality for Maccabi Haifa is low while the derived centrality is high, thereby making it a bridge.\nCorrelations for Centrality Measures\n\n\nhead(transfer.nodes)\n\n\n                               name degree indegree outdegree\nAston Villa             Aston Villa     35       27         8\nInter Milan             Inter Milan     68       32        36\nBorussia Dortmund Borussia Dortmund     45       18        27\nACF Fiorentina       ACF Fiorentina     66       38        28\nReal Madrid             Real Madrid     46       17        29\nRB Leipzig               RB Leipzig     44       26        18\n                      eigen        rc   eigen.rc        dc  eigen.dc\nAston Villa       0.2139009 0.1837553 0.03930541 0.8162447 0.1745954\nInter Milan       0.8787351 0.2193920 0.19278741 0.7806080 0.6859477\nBorussia Dortmund 0.2370659 0.1480322 0.03509339 0.8519678 0.2019725\nACF Fiorentina    0.7988873 0.1174342 0.09381665 0.8825658 0.7050706\nReal Madrid       0.2296944 0.2975292 0.06834078 0.7024708 0.1613536\nRB Leipzig        0.3082591 0.1717242 0.05293556 0.8282758 0.2553235\n                  betweeness constraint  authority hub_score\nAston Villa          788.000 0.11333984 0.11093521 0.2347654\nInter Milan         2799.590 0.09623411 0.26367856 0.7339420\nBorussia Dortmund   2073.000 0.06401961 0.14776045 0.5191494\nACF Fiorentina     31709.998 0.11085545 0.06147522 0.4296561\nReal Madrid         4185.762 0.10787227 0.39259852 1.0000000\nRB Leipzig          2936.417 0.09094430 0.10029228 0.3521672\n\ncor<-transfer.nodes %>% \n  select(degree,eigen,betweeness, authority, hub_score)%>%\n  correlate() %>%\n  rearrange()\nrplot(cor)\n\n\n\n\nBrokerage\n\n\ntempo <-as.data.frame(brokerage(network, cl  = get.vertex.attribute(network,\"league\"))$raw.nli)\nhead(tempo)\n\n\n                  w_I w_O b_IO b_OI b_O   t\nAston Villa       209   0    0    0   0 209\nInter Milan       925   0    0    0   0 925\nBorussia Dortmund 416   0    0    0   0 416\nACF Fiorentina    897   0    0    0   0 897\nReal Madrid       420   0    0    0   0 420\nRB Leipzig        410   0    0    0   0 410\n\ntransfer.nodes<-transfer.nodes %>%\nmutate(broker.tot = tempo$t, # AS ROMA, AS Monaco, US Sassuolo, Genoa CFC, Atlanta BC\n       broker.coord = tempo$w_I,\n       broker.itin = tempo$w_O, # Aston Villa, Inter Milan, Borussia Dortmund, ACF florentina\n       broker.rep = tempo$b_IO, # # Aston Villa, Inter Milan, Borussia Dortmund, ACF florentina\n       broker.gate = tempo$b_OI,\n       broker.lia = tempo$b_O)\nbroker <- transfer.nodes %>% \n  arrange(desc(broker.tot)) %>% \n  slice(1:10)\nkable(broker)\n\n\n\n\n\nname\n\n\ndegree\n\n\nindegree\n\n\noutdegree\n\n\neigen\n\n\nrc\n\n\neigen.rc\n\n\ndc\n\n\neigen.dc\n\n\nbetweeness\n\n\nconstraint\n\n\nauthority\n\n\nhub_score\n\n\nbroker.tot\n\n\nbroker.coord\n\n\nbroker.itin\n\n\nbroker.rep\n\n\nbroker.gate\n\n\nbroker.lia\n\n\nAS Roma\n\n\nAS Roma\n\n\n78\n\n\n39\n\n\n39\n\n\n1.0000000\n\n\n0.1130986\n\n\n0.1130986\n\n\n0.8869014\n\n\n0.8869014\n\n\n20233.500\n\n\n0.0830009\n\n\n0.3603443\n\n\n0.2527186\n\n\n1286\n\n\n1286\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nAS Monaco\n\n\nAS Monaco\n\n\n72\n\n\n39\n\n\n33\n\n\n0.3837432\n\n\n0.1410820\n\n\n0.0541392\n\n\n0.8589180\n\n\n0.3296040\n\n\n920.000\n\n\n0.0822568\n\n\n0.2386720\n\n\n0.6582977\n\n\n1157\n\n\n1157\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nUS Sassuolo\n\n\nUS Sassuolo\n\n\n70\n\n\n35\n\n\n35\n\n\n0.7789739\n\n\n0.0487223\n\n\n0.0379534\n\n\n0.9512777\n\n\n0.7410205\n\n\n19581.790\n\n\n0.1146313\n\n\n0.1001784\n\n\n0.1704004\n\n\n1026\n\n\n1026\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nGenoa CFC\n\n\nGenoa CFC\n\n\n73\n\n\n46\n\n\n27\n\n\n0.9612356\n\n\n0.0879843\n\n\n0.0845737\n\n\n0.9120157\n\n\n0.8766619\n\n\n34603.483\n\n\n0.1803853\n\n\n0.1525313\n\n\n0.4153337\n\n\n1015\n\n\n1015\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nAtalanta BC\n\n\nAtalanta BC\n\n\n68\n\n\n35\n\n\n33\n\n\n0.7380989\n\n\n0.0801672\n\n\n0.0591713\n\n\n0.9198328\n\n\n0.6789275\n\n\n17953.233\n\n\n0.0997573\n\n\n0.1513361\n\n\n0.3371393\n\n\n966\n\n\n966\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nInter Milan\n\n\nInter Milan\n\n\n68\n\n\n32\n\n\n36\n\n\n0.8787351\n\n\n0.2193920\n\n\n0.1927874\n\n\n0.7806080\n\n\n0.6859477\n\n\n2799.590\n\n\n0.0962341\n\n\n0.2636786\n\n\n0.7339420\n\n\n925\n\n\n925\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nSL Benfica\n\n\nSL Benfica\n\n\n63\n\n\n25\n\n\n38\n\n\n0.2308760\n\n\n0.0952775\n\n\n0.0219973\n\n\n0.9047225\n\n\n0.2088787\n\n\n9303.833\n\n\n0.0988418\n\n\n0.1211357\n\n\n0.5025727\n\n\n905\n\n\n905\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nACF Fiorentina\n\n\nACF Fiorentina\n\n\n66\n\n\n38\n\n\n28\n\n\n0.7988873\n\n\n0.1174342\n\n\n0.0938166\n\n\n0.8825658\n\n\n0.7050706\n\n\n31709.998\n\n\n0.1108554\n\n\n0.0614752\n\n\n0.4296561\n\n\n897\n\n\n897\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nSporting CP\n\n\nSporting CP\n\n\n63\n\n\n24\n\n\n39\n\n\n0.2121757\n\n\n0.0853551\n\n\n0.0181103\n\n\n0.9146449\n\n\n0.1940654\n\n\n15777.081\n\n\n0.0750053\n\n\n0.0362787\n\n\n0.2564397\n\n\n891\n\n\n891\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nJuventus FC\n\n\nJuventus FC\n\n\n68\n\n\n27\n\n\n41\n\n\n0.6770212\n\n\n0.2150981\n\n\n0.1456259\n\n\n0.7849019\n\n\n0.5313953\n\n\n20394.667\n\n\n0.1013719\n\n\n1.0000000\n\n\n0.5912871\n\n\n879\n\n\n879\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\nAS Roma plays a role of coordinator in the network which means that many ties go to and from AS Roma. This is in alignment with the degrees of the network as we saw earlier and the Eigenvector centrality which was also the highest for AS Roma in the network.\nAston Villa is an iterant broker in the network.\n\n\n\n",
    "preview": "posts/2022-05-09-network-status/network-status_files/figure-html5/unnamed-chunk-6-1.png",
    "last_modified": "2022-05-10T00:39:58-04:00",
    "input_file": "network-status.knit.md"
  },
  {
    "path": "posts/2022-05-08-exploring-european-football-transfer-networks/",
    "title": "Exploring European Football Transfer Networks",
    "description": "Exploring a network of football teams and the transactions they made from 2018-2021. \nAn Edgelist maybe?",
    "author": [
      {
        "name": "Isha Akshita Mahajan, Ankit Kumar",
        "url": {}
      }
    ],
    "date": "2022-05-08",
    "categories": [],
    "contents": "\nLoad Required Packages\n\n\nlibrary(igraph)\nlibrary(tidyverse)\nlibrary(corrr)\nlibrary(intergraph)\nlibrary(statnet)\nlibrary(network)\nlibrary(sna)\nlibrary(ggplot2)\nlibrary(kableExtra)\n\n\n\nLoad the data\nI begin by converting the data into an edgelist format. I select the club from and club to columns which are our nodes in this case. The relationship that I’m interested in is where from and where to has the majority of transfers taken place across various places. After selecting the from and to columns, I select the players, the transfer fee and the season in which the transfer took place. I also remove loan and free transfer as they don’t seem relevant at the moment.\n\n\n#load data from CSV\ntransfers <- read_csv(\"/Users/isha/Desktop/GitHub/transfernetworks.csv\")\n#select relevant data for edgelist format\ndata <- transfers %>% \n  select(club_from, club_to, name,fee) %>% \n  filter(fee != \"free transfer\") %>% \n  filter(fee != \"loan transfer\") %>% \n  filter (fee != 0)\ndata$fee <- as.numeric(data$fee) \ndata <- data %>% \nfilter(fee != is.na(fee))\nany(is.na(data$fee))\n\n\n[1] FALSE\n\nhead(data)\n\n\n# A tibble: 6 × 4\n  club_from         club_to             name                 fee\n  <chr>             <chr>               <chr>              <dbl>\n1 Aston Villa       Manchester City     Jack Grealish  117000000\n2 Inter Milan       Chelsea FC          Romelu Lukaku  113000000\n3 Borussia Dortmund Manchester United   Jadon Sancho    85000000\n4 ACF Fiorentina    Juventus FC         Dušan Vlahović  81000000\n5 Real Madrid       Manchester United   Raphaël Varane  40000000\n6 Inter Milan       Paris Saint-Germain Achraf Hakimi   66000000\n\nkable(head(data))\n\n\n\nclub_from\n\n\nclub_to\n\n\nname\n\n\nfee\n\n\nAston Villa\n\n\nManchester City\n\n\nJack Grealish\n\n\n1.17e+08\n\n\nInter Milan\n\n\nChelsea FC\n\n\nRomelu Lukaku\n\n\n1.13e+08\n\n\nBorussia Dortmund\n\n\nManchester United\n\n\nJadon Sancho\n\n\n8.50e+07\n\n\nACF Fiorentina\n\n\nJuventus FC\n\n\nDušan Vlahović\n\n\n8.10e+07\n\n\nReal Madrid\n\n\nManchester United\n\n\nRaphaël Varane\n\n\n4.00e+07\n\n\nInter Milan\n\n\nParis Saint-Germain\n\n\nAchraf Hakimi\n\n\n6.60e+07\n\n\nCreate Edgelist (Part 1)\nThe edgelist I created consists of 867 nodes and 4386 ties. The edge attributes are the players who are being transferred. The weight of the edges is the fee for which they were transferred. The edgelist is directed because the players are transferring from one team to another.\n\n\n#convert data into matrix format\ndata.mat <- as.matrix(data)\n#create igraph object from data\nig <- graph_from_data_frame(data.mat, directed = TRUE)\n# add edge attribute weight i.e transfer fee\nig <- set_edge_attr(ig, \"weight\", value = na.omit(data$fee))\n# add edge attribute season of transfer\n#ig<-  set_edge_attr(ig, \"season\", value = na.omit(data$season))\n# add node attribute i.e league the club belongs to\n#set_vertex_attr(ig,\"league\" ,value = node_attr)\n#delete edge attribute that was automatically being created in addition to weight\nig <- delete_edge_attr(ig, \"fee\")\n#check summary of the igraph object\nsummary(ig)\n\n\nIGRAPH 249a888 DNW- 867 4386 -- \n+ attr: name (v/c), name (e/c), weight (e/n)\n\n#convert ig network into intergraph object to coerce with statnet\nnetwork <- intergraph::asNetwork(ig) \nnetwork\n\n\n Network attributes:\n  vertices = 867 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = TRUE \n  bipartite = FALSE \n  total edges= 4386 \n    missing edges= 0 \n    non-missing edges= 4386 \n\n Vertex attribute names: \n    vertex.names \n\n Edge attribute names not shown \n\n\n\n#plot intergraph object\nplot(network)\n\n\n\n\n\n\n#plot igraph object \nplot(ig)\n\n\n\n\nExploring Network Structures\n\n\n#count the number of nodes\nvcount(ig)\n\n\n[1] 867\n\n# count the number of edges\necount(ig)\n\n\n[1] 4386\n\nThe network consists of 867 nodes and 4386 edges. This means that there are 867 football clubs in our network and we are going to be explore the transfer of players that has taken place in the last four years i.e 8 transfer windows.\n\n\n# look at the dyad census\ndyad_census(ig)\n\n\n$mut\n[1] 201\n\n$asym\n[1] 3468\n\n$null\n[1] 371742\n\nThere are 201 mutual, 3468 asymmetrical and 371742 dyads\n\n\ntriad_census(ig)\n\n\n [1] 105140687   2584373    450247     12854     17067     27123\n [7]      4389      3716      1486       339       380       182\n[13]       194       306       134        28\n\ntriangles(ig)\n\n\n+ 8007/867 vertices, named, from 249a888:\n   [1] SL Benfica                      \n   [2] Borussia Dortmund               \n   [3] Eintracht Frankfurt             \n   [4] SL Benfica                      \n   [5] Borussia Dortmund               \n   [6] PSV Eindhoven                   \n   [7] SL Benfica                      \n   [8] Borussia Dortmund               \n   [9] CA Boca Juniors                 \n  [10] SL Benfica                      \n+ ... omitted several vertices\n\n\n\nis_directed(ig)\n\n\n[1] TRUE\n\nis_weighted(ig)\n\n\n[1] TRUE\n\nis_bipartite(ig)\n\n\n[1] FALSE\n\nThe results suggest that the network is directed, i.e players are transferring from one club to another.\nThe network is weighted. The weight of the transfer is the fee for which the transfer was made.\nThe network is not bipartite which mean that they transfers are not in sets- there is a flow of transfers of players in the network.\nTransitivity\n\n\n#get global clustering cofficient: igraph\ntransitivity(ig, type=\"global\")\n\n\n[1] 0.1088854\n\n#get average local clustering coefficient: igraph\ntransitivity(ig, type=\"average\")\n\n\n[1] 0.1058294\n\nThe global transitivity of the graph is 0.1088854 which is the ratio of triangles connected to triangles\nthe average transitivity 0.1058294 is the transitivity of the local triad clusters, i.e. the ratio of local triangles to all connected triangles.\nPath Lengths\nThe average path length in the weighted network is 5689620.\n\n\naverage.path.length(ig)\n\n\n[1] 5689620\n\nThe shortest_paths function enables us to look at the shortest parts between two nodes. Let’s explore some shortest between football clubs of various leagues.\n\n\nshortest_paths(ig,\"Chelsea FC\", \"Liverpool FC\")$vpath[[1]]\n\n\n+ 6/867 vertices, named, from 249a888:\n[1] Chelsea FC        Spartak Moscow    SC Freiburg      \n[4] 1.FC Union Berlin FC Schalke 04     Liverpool FC     \n\nshortest_paths(ig, \"FC Porto\", \"Juventus FC\")$vpath[[1]]\n\n\n+ 6/867 vertices, named, from 249a888:\n[1] FC Porto       AS Roma        ACF Fiorentina Hellas Verona \n[5] SS Lazio       Juventus FC   \n\nshortest_paths(ig, \"Bayern Munich\", \"Aston Villa\")$vpath[[1]]\n\n\n+ 9/867 vertices, named, from 249a888:\n[1] Bayern Munich       TSG 1899 Hoffenheim VfB Stuttgart      \n[4] SC Braga            Olympiacos Piraeus  Red Star Belgrade  \n[7] UD Las Palmas       LOSC Lille          Aston Villa        \n\n\n\ndistances(ig,\"Chelsea FC\", \"Real Madrid\")\n\n\n           Real Madrid\nChelsea FC       8e+05\n\ndistances(ig, \"Bayern Munich\", \"Chelsea FC\")\n\n\n              Chelsea FC\nBayern Munich    1050000\n\n\n\naverage.path.length(ig)\n\n\n[1] 5689620\n\nThe distance between Chelsea and FC Barcelona is 1.6 nodes.\nComponent Structure\n\n\nnames(igraph::components(ig))\n\n\n[1] \"membership\" \"csize\"      \"no\"        \n\nigraph::components(ig)$no\n\n\n[1] 20\n\nigraph::components(ig)$csize\n\n\n [1] 829   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\n[17]   2   2   2   2\n\n#igraph::components(ig)$membership\n\n\n\nThere are 20 components in this network. The largest component consists of 829 nodes and the rest nineteen components comprise of two nodes each.\nNetwork Visualizations - an attempt\n\n\nplot(ig, vertex.label.color = \"black\")\n\n\n\n\n\n\nm1 <- layout_nicely(ig)\nw1 <- E(ig)$names\nplot(ig, \n        vertex.label.color = \"black\", \n        edge.color = 'black',\n        edge.width = w1,\n        layout = m1)\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-05-08-exploring-european-football-transfer-networks/exploring-european-football-transfer-networks_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-05-09T23:58:44-04:00",
    "input_file": "exploring-european-football-transfer-networks.knit.md"
  },
  {
    "path": "posts/2022-05-08-network-degree/",
    "title": "Network Degree",
    "description": "Network Degree of Football Networks",
    "author": [
      {
        "name": "Isha Akshita Mahajan,Ankit Kumar",
        "url": {}
      }
    ],
    "date": "2022-05-08",
    "categories": [],
    "contents": "\nAssignment Description\nBriefly describe the dataset you are using: identify initial network format, describe and identify the nodes (including how many nodes are in the dataset), what constitutes a tie or edge (including how many ties, whether ties are directed/undirected and weighted/binary, and how to interpret the value of the tie if any), whether or not there are edge attributes that might be used to subset data or stack multiple networks (e.g., tie type, year, etc). Not every feature of the network needs to be described, but description should orient reader to the network data and provide any necessary context for the results provided.\nProvide at least two or three noteworthy results, including the relevant statistics and interpretation. For example, explaining which node(s) are most central and which are least central. Discuss (with any related evidence) whether or not the node(s) behavior is in line with or violates expectations based on the degree centrality measure. What do you make of network density and centralization measures?\nDensity\n\n\ngraph.density(ig, loops = FALSE)\n\n\n[1] 0.005841598\n\nThe network density of the football transfer network is 0.005 which indicates that the 0.5% of all possible ties in the network are made. In this case we would leave the loops value as false because it is not possible for a football team to transfer a player back to their own team.\nDegree\nThe degree measures the node centrality or a popularity of a node. It gives a count of the relationships that a node is involved in or the number of edges it has. Given that the goal of these blogs to keep all these important network properties in one place, I begin by creating a dataframe that I’ll keep on building as I create these blogs. I call this data frame transfer.nodes.\n\n\n#create degree column\ntransfer.nodes<-data.frame(name=V(ig)$name, degree=igraph::degree(ig))\n#create indegree and outdegree column\ntransfer.nodes<-transfer.nodes %>%\n           mutate(indegree=igraph::degree(ig, mode=\"in\", loops=FALSE),\n           outdegree=igraph::degree(ig, mode=\"out\", loops=FALSE))\n\n\n\n\n\n# clubs that have the highest relationships in the network\ndegree <- transfer.nodes %>% \n  arrange(desc(degree)) \nkable(head(degree))\n\n\n\n\n\nname\n\n\ndegree\n\n\nindegree\n\n\noutdegree\n\n\nAS Roma\n\n\nAS Roma\n\n\n78\n\n\n39\n\n\n39\n\n\nGenoa CFC\n\n\nGenoa CFC\n\n\n73\n\n\n46\n\n\n27\n\n\nAS Monaco\n\n\nAS Monaco\n\n\n72\n\n\n39\n\n\n33\n\n\nUS Sassuolo\n\n\nUS Sassuolo\n\n\n70\n\n\n35\n\n\n35\n\n\nInter Milan\n\n\nInter Milan\n\n\n68\n\n\n32\n\n\n36\n\n\nJuventus FC\n\n\nJuventus FC\n\n\n68\n\n\n27\n\n\n41\n\n\n# Clubs that recieved the most transfers.\nindegree <- transfer.nodes %>% \n  arrange(desc(indegree)) \nkable(head(indegree))\n\n\n\n\n\nname\n\n\ndegree\n\n\nindegree\n\n\noutdegree\n\n\nGenoa CFC\n\n\nGenoa CFC\n\n\n73\n\n\n46\n\n\n27\n\n\nAS Roma\n\n\nAS Roma\n\n\n78\n\n\n39\n\n\n39\n\n\nAS Monaco\n\n\nAS Monaco\n\n\n72\n\n\n39\n\n\n33\n\n\nACF Fiorentina\n\n\nACF Fiorentina\n\n\n66\n\n\n38\n\n\n28\n\n\nAC Milan\n\n\nAC Milan\n\n\n60\n\n\n38\n\n\n22\n\n\nParma Calcio 1913\n\n\nParma Calcio 1913\n\n\n48\n\n\n38\n\n\n10\n\n\n# Clubs that transferred the most.\noutdegree <- transfer.nodes %>% \narrange(desc(outdegree)) \nkable(head(outdegree))\n\n\n\n\n\nname\n\n\ndegree\n\n\nindegree\n\n\noutdegree\n\n\nJuventus FC\n\n\nJuventus FC\n\n\n68\n\n\n27\n\n\n41\n\n\nSporting CP\n\n\nSporting CP\n\n\n63\n\n\n24\n\n\n39\n\n\nAS Roma\n\n\nAS Roma\n\n\n78\n\n\n39\n\n\n39\n\n\nFC Barcelona\n\n\nFC Barcelona\n\n\n59\n\n\n21\n\n\n38\n\n\nSL Benfica\n\n\nSL Benfica\n\n\n63\n\n\n25\n\n\n38\n\n\nInter Milan\n\n\nInter Milan\n\n\n68\n\n\n32\n\n\n36\n\n\nAS ROMA has the highest degree in our football transfer network. Both the in degree and the out degrees hold a value of 39. This means that 39 transfer of players have left the club and 39 players have come in to the club.This makes me wonder if AS ROMA is a club which might be serving like a starting point for various players to move towards the major football leagues. But there might be better ways to explore that later in the analysis.\nGenoa FC has the indegree of 46 which means they’ve had 46 transfers to their club.\nJuventus FC has the highest ourdegree which means they’ve transferred 41 players out of the club.\n\n\n#V(ig)$name\nroma_movement <- incident(ig, 66, mode = c(\"all\"))\n\n\n\n\n\n#table(head_of(ig, E(ig)))\n\n\n\n\n\n# make a basic plot\nplot(ig, \n     vertex.label.color = \"black\", \n     edge.color = 'gray77',\n     vertex.size = 6,\n     edge.arrow.size = 0.1,\n     layout = layout_nicely(ig))\n\n\n\n\nDegree Distributions\n\n\n#create a histogram of Transfer Indegree\nhist(transfer.nodes$indegree, main=\"Football Transfers: In-degree Distribution\", xlab=\"Players Recieved\")\n\n\n\n\n\n\n#create a histogram of Transfer Indegree\nhist(transfer.nodes$outdegree, main=\"Football Transfers: Out-degree Distribution\", xlab=\"Players Transferred\")\n\n\n\n\nNetwork Degree Centralization\nAdd Interpretation, check if loops are supposed to be true or false\n\n\n#get network centralization score: igraph\ncentr_degree(ig, loops = FALSE, mode=\"in\")$centralization\n\n\n[1] 0.04733078\n\ncentr_degree(ig, loops = FALSE, mode=\"out\")$centralization\n\n\n[1] 0.04155044\n\n\n\n\n",
    "preview": "posts/2022-05-08-network-degree/network-degree_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2022-05-10T00:36:07-04:00",
    "input_file": "network-degree.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Introduction to Football Networks",
    "description": "In this blog, We'll be referring to soccer as football -- since it's played with a foot.",
    "author": [
      {
        "name": "Isha Akshita Mahajan, Ankit Kumar",
        "url": {}
      }
    ],
    "date": "2022-05-08",
    "categories": [],
    "contents": "\nTransfer of players in European Football\nThis blog is an attempt to examine a social network of football transfers in major football leagues. The data was extracted using web scraping techniques from transfermarket.co.uk which is known to be a reliable source for data on players and their movement in various sports.\nUnlike American sports, where players transfer from one team to another either through contracts or through their agents. It is more like a trade. However, in the football transfer system, the players move from one team to another by the selling and buying process. The transaction that is made during the process is considered to be a transfer fee and is the amount that one team is paying to another while transferring the player. Usually 5 or 10 percent of this fee goes to the player themself.\nThese transactions happen during transfer windows which are similar to trade deadlines in the NBA. However, unlike a specific date, it is a window of time during which football clubs buy and sell players. These transfer windows in most European leagues are during the summer summer and winter.\nIn addition to transfers by paying money, players also move from one club to another on loans where they can temporally play for a team for which they dont have a contract. There is no transaction between the clubs however the club is still responsible for paying the player’s fee.\nWebscraping\nThe data was scraped using python and is attached to this blog. We extracted data from the year 2018-2021 which is 4 years and 8 transfer windows. We removed the free and loan transfers because they don’t show a transaction between the club.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-10T00:46:33-04:00",
    "input_file": "welcome.knit.md"
  }
]
